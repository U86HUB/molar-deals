
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const SUPABASE_URL = "https://fyyfrlhcvtxddonnkeoy.supabase.co";
const SUPABASE_PUBLISHABLE_KEY = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImZ5eWZybGhjdnR4ZGRvbm5rZW95Iiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDU4NjU5ODMsImV4cCI6MjA2MTQ0MTk4M30.SOZTo0frLpPY3L0wN2ljV8Axqryct1nkh4CUpotGZz4";

// Import the supabase client like this:
// import { supabase } from "@/integrations/supabase/client";

export const supabase = createClient<Database>(SUPABASE_URL, SUPABASE_PUBLISHABLE_KEY, {
  auth: {
    storage: localStorage,
    persistSession: true,
    autoRefreshToken: true,
    detectSessionInUrl: true,
    flowType: 'pkce',
  },
  global: {
    fetch: (...args) => {
      // Add timeout to fetch requests
      const [resource, config] = args;
      return fetch(resource, {
        ...config,
        signal: config?.signal || (typeof AbortController !== 'undefined' 
          ? new AbortController().signal 
          : undefined),
      });
    }
  },
  realtime: {
    timeout: 30000, // Increase timeout for realtime connections
  }
});

// Add diagnostic helpers
export const checkSupabaseConnection = async () => {
  try {
    // Using 'profiles' table instead of 'health_check' since it exists in the schema
    const { data, error } = await supabase.from('profiles').select('id').limit(1);
    if (error) throw error;
    console.log('Supabase connection test successful');
    return true;
  } catch (error) {
    console.error('Supabase connection test failed:', error);
    return false;
  }
};
